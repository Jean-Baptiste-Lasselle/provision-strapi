version: '3'

services:
# TODO :  rajouter le service NGINX pour servir toutes les URLs, 
# TODO : faire la recette terraform / ansible pour provisionner la configuration du serveur DNS dans une VM dédiée, différente de l'hôte Docker, et la configuration du serveur DNS de la machine utilisée pour tester strapi, avec un Firefox / mozilla. 
  bootstrapi:
    image: boot/bootiestrapi:v1.0.0
    build: 
      context: ./provision-bootstrapi/build-img-docker/all-in-one/
      args:
        - NO_VERSION_BOOOTSTRAPI_PAR_DEFAUT=1.0.0
    environment:
      - APP_NAME=instance-bootstrapi
      - DATABASE_CLIENT=mongo
      - DATABASE_HOST=db
      - DATABASE_PORT=27017
      - DATABASE_NAME=bootstrapi_db
      - DATABASE_USERNAME=
      - DATABASE_PASSWORD=
      - HOST=localhost
      # numéro de version de publication dans le registry NPM privé, via "prebootstrapi" (qui deviendra un Jenkins Pipeline)
      - NUMERO_VERSION_BOOTSTRAPI=1.0.0
    ports:
      - 1337:1337
#    volumes:
      #- ./strapi-app:/usr/src/api/strapi-app
      #- /usr/src/api/strapi-app/node_modules
    environment: # je préfèrerai que cette URL soit chargée dynamiquement, avec la provision Terraform / Ansible de l'instance marguerite Gitlab
      - URI_PRIVATE_NPM_REGISTRY=http://marguerite_npm:5984/registry/_design/app/_rewrite
    depends_on:
      # Je ne ferais bientôt plus de dépendance entre bootstrapi et marguerite, gérée par docker-compose. Je voudrais à l'avenir que cette
      # dépendance soit gérée par ansible / terraform. Ansible utilisera les HEALTHCHECK pour attendre que le conteneur build_strapi ait
      # bien réalisé le build / publish (vers le registry privé NPM) avec succès, avant de lancer le docker-compose up bootstrapi 
      - build_bootstrapi
      - bdd_strapi
    restart: always
  bdd_strapi:
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=bootstrapi
    ports:
      - 27017:27017
    volumes:
      - ./db:./donnees/strapi/db
    restart: always

  marguerite_reverse_proxy:
    image: marguerite/nginx:1.0.0
    build:
      context: ./provision-marguerite/build-img-docker/all-in-one/marguerite/nginx/
    ports:
      - 80:80
    volumes:
      # - /host/path/nginx.conf:/etc/nginx/nginx.conf:rw
      - ./nginx/nginx.conf:/etc/nginx/conf.d/:ro
    restart: always
# TODO :  rajouter le service NGINX pour servir toutes les URLs, 
# TODO : faire la recette terraform / ansible pour provisionner la configuration du serveur DNS dans une VM dédiée, différente de l'hôte Docker, et la configuration du serveur DNS de la machine utilisée pour tester strapi, avec un Firefox / mozilla. 
  marguerite_npm_bdd: 
    # https://hub.docker.com/r/couchbase/server/
    # https://developer.couchbase.com/documentation/server/3.x/admin/CLI/cbreset_password_tool.html
    # https://developer.couchbase.com/documentation/server/4.1/install/init-setup.html ==>> tout particulièrement pour réaliser la configuration du user initial à l'installation de couchbase 
    # https://developer.couchbase.com/documentation/server/4.1/install/setup-cli-rest.html
    # image: couchbase/server 
    build:
      context: ./provision-marguerite/build-img-docker/all-in-one/marguerite/npm-couchdb/
    ports:
      - 8091-8094:8091-8094
      - 11210:11210
    restart: always
  # la BDD devra donc être accédée, par le conteneur "marguerite_npm" , via le private network docker, avec la requête http://marguerite_npm_bdd:8091/pools
  marguerite_npm: 
    # https://github.com/npm/npm-registry-couchapp
    image: marguerite/npm-registry:1.0.0
    # un HEALTHCHECK PARTICULIER EST A DEVELOPPER =>>  le HEALTH CHECK de ce conteneur, ira faire une requête sur lui-même conteneur registry NPM privé "marguerite_npm", pour
    # vérfiier que l'artefact bootstrapi@$NUMERO_VERSION_BOOTSTRAPI a bien été publié ave succès.
    build: 
      context: ./provision-marguerite/build-img-docker/all-in-one/marguerite/npm/
      args:
        - URI_REPO_GIT_OFFICIEL_CODE_SOURCE_NPMREGISTRY_DEFAUT=https://github.com/npm/npm-registry-couchapp
        - VERSION_CODE_SOURCE_NPMREGISTRY_DEFAUT=2.7.0
        # le nom d'hôte réseau "marguerite_npm_bdd", est résolu, dans le conteneur "marguerite_npm", par docker, et non par une configuration du reverse proxy NGINX. 
        # Seul le conteneur "marguerite_npm", a besoin d'accéder au contenur contenant la BDD couchbase. Aucune autre type d'accès n'est nécessaire.
        - HOTE_RESEAU_DU_REGISTRY_NPM_DEFAUT=localhost
        - NO_PORT_DU_REGISTRY_NPM_DEFAUT=5984
        - HOTE_RESEAU_BDD_DU_REGISTRY_NPM_DEFAUT=provision-marguerite_marguerite_npm_bdd_1
        - NO_PORT_BDD_DU_REGISTRY_NPM_DEFAUT=8091
        - USER_NAME_BDD_DU_REGISTRY_NPM_DEFAUT=marguerite
        - USER_PWD_BDD_DU_REGISTRY_NPM_DEFAUT=marguerite
        - FIRST_USER_NAME_DU_REGISTRY_NPM_DEFAUT=admin
        - FIRST_USER_PWD_DU_REGISTRY_NPM_DEFAUT=password
    environment:
      # - Le code source de npm registry couchbase // https://github.com/npm/npm-registry-couchapp/releases/tag/v2.7.1
      - URI_REPO_GIT_OFFICIEL_CODE_SOURCE_NPMREGISTRY=https://github.com/npm/npm-registry-couchapp
      - VERSION_CODE_SOURCE_NPMREGISTRY=2.7.0
      # - L'hôte réseau serveur, pour le npm registry privé
      - HOTE_RESEAU_DU_REGISTRY_NPM=localhost
      - NO_PORT_DU_REGISTRY_NPM=5984
      # - le premier utilsiateur existant après installation / démarrage du registry npm privé
      - FIRST_USER_NAME_DU_REGISTRY_NPM=admin
      - FIRST_USER_PWD_DU_REGISTRY_NPM=password
      # - La BDD CoucheBase, du registry NPM
      - HOTE_RESEAU_BDD_DU_REGISTRY_NPM=provision-marguerite_marguerite_npm_bdd_1
      - NO_PORT_BDD_DU_REGISTRY_NPM=8091
      - USER_NAME_BDD_DU_REGISTRY_NPM=marguerite
      - USER_PWD_BDD_DU_REGISTRY_NPM=marguerite
    depends_on:
      - marguerite_npm_bdd
    restart: always
  build_bootstrapi:
    image: build/bootstrapi:1.0.0
    build: 
      context: ./provision-marguerite/build-img-docker/all-in-one/build_bootstrapi/
      args: # je préfèrerai que cette URL soit chargée dynamiquement, avec la provision Terraform / Ansible de l'instance marguerite Gitlab
        - URI_REPO_GIT_DEVELOPPEURS_DEFAUT=https://github.com/Jean-Baptiste-Lasselle/bootstrapi
        - URI_PRIVATE_NPM_REGISTRY_DEFAUT=http://marguerite_npm:5984/registry/_design/app/_rewrite
        - NO_VERSION_BOOOTSTRAPI_DE_DEPART_PAR_DEFAUT=3.0.0-alpha.13.1
        - NO_VERSION_PUBLICATION_BOOOTSTRAPI_PAR_DEFAUT=1.0.0
    environment: # je préfèrerai que cette URL soit chargé edynamiquement, avec la provision Terraform / Ansible de l'instance marguerite Gitlab
      - URI_REPO_GIT_DEVELOPPEURS=https://github.com/Jean-Baptiste-Lasselle/bootstrapi
    # Ce conteneur va builder le code source provenant du git repo utilisé par les développeurs, et publier l'archive sur le registry NPM privé "marguerite_npm"
      - URI_PRIVATE_NPM_REGISTRY=http://marguerite_npm:5984/registry/_design/app/_rewrite
      - ENV NO_VERSION_PUBLICATION_BOOOTSTRAPI=3.0.0-alpha.13.1
      - ENV NO_VERSION_BOOOTSTRAPI_DE_DEPART=1.0.0
    depends_on:
      - marguerite_npm
